dnl =======================================================
dnl FILE: ./admin/configure.in.min
dnl =======================================================

dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
dnl    Boston, MA 02110-1301, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(kdewebdev, "3.5.10") dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3.3)
AC_PATH_KDE
dnl =======================================================
dnl FILE: configure.in.in
dnl =======================================================

#MIN_CONFIG(3.3)
dnl If the quanta executable name and the data dirs are changed from the default "quanta",
dnl the following changes are needed:
dnl  - change the quanta_datadir
dnl  - change the QUANTA_PACKAGE and QUANTA_VERSION in quanta/src/quanta.h
dnl  - change the KDE_ICON in quanta/data/icons/Makefile.am
dnl  - create a .desktop file and the corresponding icons
dnl  - make sure the .desktop file is installed in the quanta/src/Makefile.am
dnl    (kdelnk_DATA = quanta.desktop line)
dnl  - change the bin_PROGRAMS and the _SOURCES, _LDADD, _METASOURCES, _LDFLAGS
dnl    below it in the quanta/src/Makefile.am, so it reflects the new executable name

AM_INIT_AUTOMAKE(kdewebdev, "3.5.10")
KDE_ENABLE_HIDDEN_VISIBILITY

quanta_datadir='${kde_datadir}/quanta'
package="quanta"
AC_SUBST(package)
AC_SUBST(quanta_datadir)
AM_CONDITIONAL(QUANTAUIRC_HOOK, test "x$package" != "xquanta")

dnl These are common macros that you might or might not want to use

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h stdlib.h paths.h sys/statvfs.h sys/statfs.h sys/vfs.h sys/mount.h sys/param.h stdarg.h)
AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(statvfs)

AC_DEFINE_UNQUOTED(PREFIX,"$prefix",[Define the PREFIX to be used later])

dnl
dnl The following new parameters were added to offer
dnl the ability to specify the location of the libxml
dnl library during linking and compilation.
dnl Mathieu Lacage 30/03/2000
dnl
LIBXML_PREFIX=""
AC_ARG_WITH(libxml-prefix,
        [  --with-libxml-prefix=[PFX]     Specify location of libxml],
   LIBXML_PREFIX="$withval"
)

if test "x${LIBXML_PREFIX}" != "x"
then
  AC_MSG_RESULT(Using a libxml prefix of ${LIBXML_PREFIX})
fi


AC_SUBST(LIBXML_LIBS)

dnl Test for libxml2 version
XML_CONFIG="xml2-config"
AC_MSG_CHECKING(for libxml libraries >= "2.6.0")
XML_WARNING=""
if test "x$LIBXML_PREFIX" != "x"
then
  if ${LIBXML_PREFIX}/bin/xml2-config --libs print > /dev/null 2>&1
  then
    XML_CONFIG=${LIBXML_PREFIX}/bin/xml2-config
  else
    XML_WARNING="1"
    XML_CONFIG=xml2-config
  fi
fi

AC_DEFUN([VERSION_TO_NUMBER],
[`$1 | sed -e 's/libxml //' | $AWK 'BEGIN { FS = "."; } { printf "%d",
 ([$]1* 1000 + [$]2) * 1000 + [$]3;}'`])

dnl
dnl test version and init our variables
dnl
if test "x$XML_CONFIG" != "x"
then
  vers=VERSION_TO_NUMBER($XML_CONFIG --version)
  if test "$vers" -lt VERSION_TO_NUMBER(echo "2.6.0")
  then
    CXXFLAGS="$CXXFLAGS -DLIBXML_2_5"
    AC_MSG_RESULT(not found - assuming 2.5.x)
  else
    AC_MSG_RESULT(found)
  fi
  LIBXML_LIBS="`$XML_CONFIG --libs`"
  LIBXML_CFLAGS="`$XML_CONFIG --cflags`"
  LIBXML_PREFIX="$XML_CONFIG --prefix"
else
  AC_MSG_ERROR(Could not find libxml2 anywhere, check ftp://xmlsoft.org/.)
fi

if test "x${XML_WARNING}" != "x"
then
   AC_MSG_RESULT(
!!Warning!! using xml2-config in default path
)
fi

LIBXML_PREFIX_DIR="`$XML_CONFIG --prefix`"

AC_SUBST(XML_CONFIG)
AC_SUBST(LIBXML_PREFIX)
AC_SUBST(LIBXML_LIBS)
AC_SUBST(LIBXML_CFLAGS)

LIBXSLT_PREFIX=""
AC_ARG_WITH(libxslt-prefix,
        [  --with-libxslt-prefix=[PFX]    Specify location of libxslt],
   LIBXSLT_PREFIX="$withval"
)

if test "x${LIBXSLT_PREFIX}" != "x"
then
  AC_MSG_RESULT(Using a libxslt prefix of ${LIBXSLT_PREFIX})
fi

dnl
dnl find libxslt
dnl
XSLT_CONFIG="xslt-config"
XSLT_WARNING=""
AC_SUBST(LIBXSLT_REQUIRED_VERSION)
AC_MSG_CHECKING(for libxslt libraries >= $LIBXSLT_REQUIRED_VERSION)
if test "x$LIBXSLT_PREFIX" != "x"
then
  if ${LIBXSLT_PREFIX}/bin/xslt-config --libs print > /dev/null 2>&1
  then
    XSLT_CONFIG=${LIBXSLT_PREFIX}/bin/xslt-config
  else
          XSLT_WARNING="1"
    XSLT_CONFIG=xslt-config
  fi
fi


AC_DEFUN([VERSION_TO_NUMBER],
[`$1 | sed -e 's/libxslt //' | $AWK 'BEGIN { FS = "."; } { printf "%d",
 ([$]1  * 1000 + [$]2) * 1000 + [$]3;}'`])

dnl
dnl test version and init our variables
dnl
if test "x$XSLT_CONFIG" != "x"
then
  vers=VERSION_TO_NUMBER($XSLT_CONFIG --version)
  if test "$vers" -ge VERSION_TO_NUMBER(echo $LIBXSLT_REQUIRED_VERSION)
  then
    LIBXSLT_LIBS="-lexslt `$XSLT_CONFIG --libs`"
    LIBXSLT_CFLAGS="`$XSLT_CONFIG --cflags`"
    AC_MSG_RESULT(found)
          if test "x$LIBXSLT_PREFIX" != "x"
     then
       AC_MSG_RESULT(
Don't forget to make sure that ${LIBXSLT_PREFIX}/lib has been added
  to your LD_LIBRARY_PATH environment variable)
    else
      LIBXSLT_PREFIX="$XSLT_CONFIG --prefix"
          fi
  else
    AC_MSG_ERROR(You need at least libxslt $LIBXSLT_REQUIRED_VERSION for this
  version of xsldbg)
  fi
else
  AC_MSG_ERROR(Could not find libxslt anywhere, check
 ftp://xmlsoft.org/XSLT/.)
fi

if test "x${XSLT_WARNING}" != "x"
then
   AC_MSG_RESULT(
!!Warning!! using xslt-config in default path
)
fi

AC_SUBST(XSLT_CONFIG)
AC_SUBST(LIBXSLT_PREFIX)
AC_SUBST(LIBXSLT_LIBS)
AC_SUBST(LIBXSLT_CFLAGS)


dnl  **********
dnl  check whether we need the qextmdi lib
dnl  (Shamlesly stolen from gideon souorces and
dnl  modified for quanta by fredi)
dnl  **********

AC_DEFUN([QUANTA_CHECK_MDI],
[
  AC_MSG_CHECKING(whether to use kmdi lib from kdelibs)
  AC_CACHE_VAL(ac_cv_mdi_setup,
  [
    AC_LANG_SAVE
    AC_LANG_CPLUSPLUS
    save_CXXFLAGS="$CXXFLAGS"
    CXXFLAGS="$KDE_INCLUDES $QT_INCLUDES"

    AC_TRY_LINK([
      #include <kdeversion.h>
    ],
    [
      #if KDE_VERSION < ((3<<16) | (3<<8) | (92))
         KDE_choke me
      #endif
    ],
      ac_cv_mdi_setup=yes,
      ac_cv_mdi_setup=no
    )
    CXXFLAGS="$save_CXXFLAGS"
    AC_LANG_RESTORE
   ])

  if test "$ac_cv_mdi_setup" = "yes"; then
    LIB_KMDI="-lkmdi"
    QEXTMDI_SUBDIR=""
    KMDI_INCLUDES=""
    AC_MSG_RESULT(yes)
  else
    LIB_KMDI='$(top_builddir)/lib/compatibility/kmdi/libquantakmdi.la'
    QEXTMDI_SUBDIR="kmdi"
    KMDI_INCLUDES='-I$(top_srcdir)/lib/compatibility/kmdi/qextmdi'
    CXXFLAGS="$CXXFLAGS -DCOMPAT_KMDI"
    AC_MSG_RESULT(no)
  fi

  AC_SUBST(LIB_KMDI)
  AC_SUBST(KMDI_INCLUDES)
  AC_SUBST(QEXTMDI_SUBDIR)
  AM_CONDITIONAL(include_qextmdi, test -n "$QEXTMDI_SUBDIR")
])

dnl Check if kmdi is present, if not use giden's one
QUANTA_CHECK_MDI

KDE_CHECK_HEADER(cvsservice_stub.h, [cvsservice_stub_h="found"], [cvsservice_stub_h="none"])
AM_CONDITIONAL(include_cvsservice, test "$cvsservice_stub_h" = "found")
if test "$cvsservice_stub_h" = "found"; then
  CXXFLAGS="$CXXFLAGS -DENABLE_CVSSERVICE"
fi

#check for KNewStuffSecure headers
KNEWSTUFF_INCLUDES=""
LIB_KNEWSTUFF="-lknewstuff"
KDE_CHECK_HEADER(knewstuff/knewstuffsecure.h, [knewstuffsecure_h="found"], [knewstuffsecure_h="none"])
AM_CONDITIONAL(include_knewstuff, test "$knewstuffsecure_h" != "found")
if test "$knewstuffsecure_h" != "found"; then
  KNEWSTUFF_INCLUDES='-I$(top_srcdir)/lib/compatibility'
  LIB_KNEWSTUFF='$(top_builddir)/lib/compatibility/knewstuff/libknewstuff.la'
fi
AC_SUBST(KNEWSTUFF_INCLUDES)
AC_SUBST(LIB_KNEWSTUFF)



AC_ARG_ENABLE(editors, [  --enable-editors        Enable selection of other editors aside of Kate],
[enable_editors=$enableval], [enable_editors="no"])

if test "$enable_editors" = "yes"; then
  CXXFLAGS="$CXXFLAGS -DENABLE_EDITORS"
fi
AC_SUBST(enable_editors)

AC_CHECK_PROGS(TAR, gnutar gtar tar, [AM_MISSING_PROG(tar)])
AC_CHECK_PROG(GZIP_COMMAND, gzip, gzip)
dnl =======================================================
dnl FILE: ./kfilereplace/configure.in.in
dnl =======================================================

#MIN_CONFIG

dnl PACKAGE set before

dnl These are common macros that you might or might not want to use

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h stdlib.h paths.h)
AC_CHECK_FUNCS(usleep)
dnl =======================================================
dnl FILE: ./kimagemapeditor/configure.in.in
dnl =======================================================

#MIN_CONFIG

dnl PACKAGE set before
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

dnl =======================================================
dnl FILE: ./klinkstatus/configure.in.in
dnl =======================================================

#MIN_CONFIG(3.2)

dnl PACKAGE set before
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

dnl =======================================================
dnl FILE: ./kommander/configure.in.in
dnl =======================================================

CPPFLAGS="$CPPFLAGS -DKOMMANDER -DDESIGNER -DQT_NO_SQL -DHAVE_KDE"

# Process user input to configure
build_kommander="yes"
AC_ARG_WITH(kommander,
[  --without-kommander     don't build Kommander],
[if test "$withval" = "no" ; then
  build_kommander="no"
fi])

if test "$build_kommander" = "no"; then
  DO_NOT_COMPILE="$DO_NOT_COMPILE kommander"
fi
  
dnl =======================================================
dnl FILE: ./kxsldbg/configure.in.in
dnl =======================================================

LIBXSLT_REQUIRED_VERSION="1.0.18"
AC_SUBST(LIBXSLT_REQUIRED_VERSION)

dnl
dnl Math detection
dnl

AC_CHECK_HEADERS(sys/types.h unistd.h string.h)
AC_CHECK_HEADERS(ieeefp.h nan.h math.h fp_class.h float.h ansidecl.h)
AC_CHECK_HEADERS(time.h sys/stat.h stdarg.h)
AC_CHECK_FUNCS(stat _stat)

AC_CHECK_FUNC(isnan, , AC_CHECK_LIB(m, isnan,
  [M_LIBS="-lm"; AC_DEFINE(HAVE_ISNAN)]))

AC_CHECK_FUNC(isinf, , AC_CHECK_LIB(m, isinf,
  [M_LIBS="-lm"; AC_DEFINE(HAVE_ISINF)]))

AC_CHECK_FUNC(pow, , AC_CHECK_LIB(m, pow,
  [M_LIBS="-lm"; AC_DEFINE(HAVE_POW)]))

AC_CHECK_FUNC(floor, , AC_CHECK_LIB(m, pow,
  [M_LIBS="-lm"; AC_DEFINE(HAVE_FLOOR)]))

AC_CHECK_FUNC(fabs, , AC_CHECK_LIB(m, pow,
  [M_LIBS="-lm"; AC_DEFINE(HAVE_FABS)]))
AC_CHECK_FUNCS(gettimeofday)
AC_CHECK_FUNCS(mktime localtime asctime)

AH_TEMPLATE(USE_DOCS_MACRO)
AH_TEMPLATE(TIMESTAMP)
AH_TEMPLATE(WITH_DEBUG_HELP)
AH_TEMPLATE(WITH_XSLDBG_DEBUG)
AH_TEMPLATE(XSLDBG_BIN)
AH_TEMPLATE(USE_XSLDBG_AS_THREAD)
AH_TEMPLATE(HAVE_INCLUDE_FIX)

AH_TEMPLATE(_GNU_SOURCE)
AH_TEMPLATE(HAVE_ISINF)
AH_TEMPLATE(HAVE_ISNAN)
AH_TEMPLATE(HAVE_POW)
AH_TEMPLATE(HAVE_FLOOR)
AH_TEMPLATE(HAVE_FABS)
AH_TEMPLATE(HAVE_QT)
AH_TEMPLATE(HAVE_PTHREAD)
AH_TEMPLATE(HAVE_READLINE)
AH_TEMPLATE(HAVE_HISTORY)

dnl
dnl how are we to invoke xsldbg, or the other stylesheet processor (xsltproc?)
dnl

AC_DEFINE(XSLDBG_BIN, "xsldbg")


dnl
dnl Do we have we fix for included xml files
dnl

save_LDFLAGS="$LDFLAGS"
save_CFLAGS="$CFLAGS"
LDFLAGS="$LDFLAGS $LIBXML_LIBS"
CFLAGS="$CFLAGS $LIBXML_CFLAGS"

AC_CHECK_LIB(xml2, xmlSetEntityReferenceFunc,
  [AC_DEFINE(HAVE_INCLUDE_FIX)],
  [AC_MSG_RESULT(
!!Warning!!  The version of libxml2 installed does not support
  debugging of files included as entities. Test 10 will be skipped
  as it will fail.   You will not be able to set breakpoints on external
        entities. Try upgrading your libxml2.
  See also --enable-includefix)
  RUNTEST10="false"
  ])
  
LDFLAGS="$save_LDFLAGS"
CFLAGS="$save_CFLAGS" 

AC_ARG_ENABLE([includefix], 
              [  --enable-includefix     Do you want to force the use of include fix (no)], [do_include_fix=$enableval], [do_include_fix="no"])

if test "x$do_include_fix" = "xyes"; then
   AC_DEFINE(HAVE_INCLUDE_FIX)
   AC_MSG_RESULT(Forcing the use if include fix)
fi



XSLDBG_MAJOR_VERSION=3
XSLDBG_MINOR_VERSION=1
XSLDBG_MICRO_VERSION=7
XSLDBG_VERSION=$XSLDBG_MAJOR_VERSION.$XSLDBG_MINOR_VERSION.$XSLDBG_MICRO_VERSION
XSLDBG_VERSION_INFO=`expr $XSLDBG_MAJOR_VERSION + \
$XSLDBG_MINOR_VERSION`:$XSLDBG_MICRO_VERSION:$XSLDBG_MINOR_VERSION

XSLDBG_VERSION_NUMBER=`expr $XSLDBG_MAJOR_VERSION \* 10000 + \
$XSLDBG_MINOR_VERSION \* 100 + $XSLDBG_MICRO_VERSION`
AC_SUBST(XSLDBG_MAJOR_VERSION)
AC_SUBST(XSLDBG_MINOR_VERSION)
AC_SUBST(XSLDBG_MICRO_VERSION)
AC_SUBST(XSLDBG_VERSION)
AC_SUBST(XSLDBG_VERSION_INFO)
AC_SUBST(XSLDBG_VERSION_NUMBER)


dnl
dnl We must run xsldbg as a thread
dnl
AC_CHECK_HEADERS(pthread.h,
    AC_DEFINE(HAVE_PTHREAD)
    AVE_PTHREAD=1
    SE_XSLDBG_AS_THREAD=1
    AC_DEFINE(USE_XSLDBG_AS_THREAD),
    AC_MSG_ERROR(PThread library not found)
)
XSLDBG_INCLUDEDIR="`pwd`/kxsldbg/kxsldbgpart"

dnl Where is the xsldbg documentation stored
dnl
docs_macro=true
AC_ARG_ENABLE(docs_macro,
  [  --enable-docs-macro     Use a compiler macro to specify where documentation is (PREFIX/doc/xsldbg/)],
  [docs_macro=$enableval], [docs_macro="yes"])

if test "x$docs_macro" = "xyes"; then
       AC_DEFINE(USE_DOCS_MACRO, 1)
       if test "x$prefix" != "x"
       then
       AC_MSG_RESULT(xsldbg will look for installed documentation in ${prefix}/doc/xsldbg)
       else
       AC_MSG_RESULT(xsldbg will look for installed documentation in ${ac_default_prefix}doc/xsldbg/)
       fi
       DOCS_PATH="${prefix}/doc/xsldbg"
AC_SUBST(DOCS_PATH)

else
       AC_MSG_RESULT(

       !!Warning!! Using a environment variable for specifiying location of documentation.
       On non risc os systems :  XSLDBG_DOCS_DIR
       On risc os systems : XSLDebugDocs\$Dir
       See --enable-docs-macro in ./configure
       )
fi


dnl include extra debugging for xsldbg?
AC_ARG_ENABLE([xsldbg-debugging], 
              [  --enable-xsldbg-debugging     Do you want to enable lots of debugging messages in xsldbg (no)], [do_xsldbg_debugging=$enableval], [do_xsldbg_debugging="no"])

if test "x$do_xsldbg_debugging" = "xyes"; then
   AC_DEFINE(WITH_XSLDBG_DEBUG)
   AC_MSG_RESULT(Enabling lots of debug messages in xsldbg)
fi




AC_MSG_RESULT(Using xsldbg as a part of kxsldbg)

dnl
dnl Check for readline and history
dnl
XSLDBG_EXTRA_LIBS=""
dnl AC_CHECK_HEADERS(readline/readline.h, [
dnl        AC_DEFINE(HAVE_READLINE)
dnl        XSLDBG_EXTRA_LIBS="-lreadline -lncurses"])
dnl AC_CHECK_HEADER(readline/history.h, [
dnl         AC_DEFINE(HAVE_HISTORY)
dnl        XSLDBG_EXTRA_LIBS="$XSLDBG_EXTRA_LIBS -lhistory"])

AC_SUBST(XSLDBG_INCLUDEDIR)
AC_SUBST(XSLDBG_EXTRA_LIBS)
XSLDBG_CFLAGS="-I${XSLDBG_INCLUDEDIR} ${LIBXSLT_CFLAGS} "
AC_SUBST(XSLDBG_CFLAGS)
AC_SUBST(XSLDBG_PREFIX)
dnl =======================================================
dnl FILE: ./quanta/parts/kafka/configure.in.in
dnl =======================================================

build_vpl="yes"

#build_vpl="no"
AC_DEFUN([QUANTA_CHECK_VPL],
[
  AC_MSG_CHECKING(whether VPL can be compiled)
  AC_CACHE_VAL(ac_cv_vpl_setup,
  [
    AC_LANG_SAVE
    AC_LANG_CPLUSPLUS
    save_CXXFLAGS="$CXXFLAGS"
    CXXFLAGS="$KDE_INCLUDES $QT_INCLUDES"

    AC_TRY_LINK([
      #include <kdeversion.h>
    ],
    [
      #if KDE_VERSION < ((3<<16) | (1<<8) | (90))
         KDE_choke me
      #endif
    ],
      ac_cv_vpl_setup=yes,
      ac_cv_vpl_setup=no
    )
    CXXFLAGS="$save_CXXFLAGS"
    AC_LANG_RESTORE
   ])

  if test "$ac_cv_vpl_setup" = "yes"; then
    build_vpl="yes"
    CXXFLAGS="$CXXFLAGS -DBUILD_KAFKAPART"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi

])

#QUANTA_CHECK_VPL

AM_CONDITIONAL(BUILD_WYSIWYG, test "$build_vpl" = "yes")

KDE_CREATE_SUBDIRSLIST
AM_CONDITIONAL(lib_SUBDIR_included, test "x$lib_SUBDIR_included" = xyes)
AM_CONDITIONAL(doc_SUBDIR_included, test "x$doc_SUBDIR_included" = xyes)
AM_CONDITIONAL(kfilereplace_SUBDIR_included, test "x$kfilereplace_SUBDIR_included" = xyes)
AM_CONDITIONAL(kimagemapeditor_SUBDIR_included, test "x$kimagemapeditor_SUBDIR_included" = xyes)
AM_CONDITIONAL(klinkstatus_SUBDIR_included, test "x$klinkstatus_SUBDIR_included" = xyes)
AM_CONDITIONAL(kommander_SUBDIR_included, test "x$kommander_SUBDIR_included" = xyes)
AM_CONDITIONAL(kxsldbg_SUBDIR_included, test "x$kxsldbg_SUBDIR_included" = xyes)
AM_CONDITIONAL(quanta_SUBDIR_included, test "x$quanta_SUBDIR_included" = xyes)
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ doc/Makefile ])
AC_CONFIG_FILES([ doc/kfilereplace/Makefile ])
AC_CONFIG_FILES([ doc/klinkstatus/Makefile ])
AC_CONFIG_FILES([ doc/kommander/Makefile ])
AC_CONFIG_FILES([ doc/kxsldbg/Makefile ])
AC_CONFIG_FILES([ doc/quanta/Makefile ])
AC_CONFIG_FILES([ doc/xsldbg/Makefile ])
AC_CONFIG_FILES([ kfilereplace/Makefile ])
AC_CONFIG_FILES([ kfilereplace/toolbar/Makefile ])
AC_CONFIG_FILES([ kimagemapeditor/Makefile ])
AC_CONFIG_FILES([ kimagemapeditor/pics/Makefile ])
AC_CONFIG_FILES([ klinkstatus/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/icons/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/icons/16x16/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/icons/22x22/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/icons/32x32/Makefile ])
AC_CONFIG_FILES([ klinkstatus/data/styles/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/cfg/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/engine/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/parser/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/ui/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/ui/settings/Makefile ])
AC_CONFIG_FILES([ klinkstatus/src/utils/Makefile ])
AC_CONFIG_FILES([ kommander/Makefile ])
AC_CONFIG_FILES([ kommander/editor/Makefile ])
AC_CONFIG_FILES([ kommander/editor/pics/Makefile ])
AC_CONFIG_FILES([ kommander/editor/templates/Makefile ])
AC_CONFIG_FILES([ kommander/examples/Makefile ])
AC_CONFIG_FILES([ kommander/examples/current/Makefile ])
AC_CONFIG_FILES([ kommander/examples/old/Makefile ])
AC_CONFIG_FILES([ kommander/examples/tutorial/Makefile ])
AC_CONFIG_FILES([ kommander/executor/Makefile ])
AC_CONFIG_FILES([ kommander/factory/Makefile ])
AC_CONFIG_FILES([ kommander/icons/Makefile ])
AC_CONFIG_FILES([ kommander/kmdrtools/Makefile ])
AC_CONFIG_FILES([ kommander/part/Makefile ])
AC_CONFIG_FILES([ kommander/plugin/Makefile ])
AC_CONFIG_FILES([ kommander/pluginmanager/Makefile ])
AC_CONFIG_FILES([ kommander/widget/Makefile ])
AC_CONFIG_FILES([ kommander/widgets/Makefile ])
AC_CONFIG_FILES([ kommander/working/Makefile ])
AC_CONFIG_FILES([ kommander/working/plugintemplate/Makefile ])
AC_CONFIG_FILES([ kxsldbg/Makefile ])
AC_CONFIG_FILES([ kxsldbg/data/Makefile ])
AC_CONFIG_FILES([ kxsldbg/kxsldbgpart/Makefile ])
AC_CONFIG_FILES([ kxsldbg/kxsldbgpart/libqtnotfier/Makefile ])
AC_CONFIG_FILES([ kxsldbg/kxsldbgpart/libxsldbg/Makefile ])
AC_CONFIG_FILES([ lib/Makefile ])
AC_CONFIG_FILES([ lib/compatibility/Makefile ])
AC_CONFIG_FILES([ lib/compatibility/kmdi/Makefile ])
AC_CONFIG_FILES([ lib/compatibility/kmdi/qextmdi/Makefile ])
AC_CONFIG_FILES([ lib/compatibility/knewstuff/Makefile ])
AC_CONFIG_FILES([ quanta/Makefile ])
AC_CONFIG_FILES([ quanta/components/Makefile ])
AC_CONFIG_FILES([ quanta/components/csseditor/Makefile ])
AC_CONFIG_FILES([ quanta/components/csseditor/data/Makefile ])
AC_CONFIG_FILES([ quanta/components/cvsservice/Makefile ])
AC_CONFIG_FILES([ quanta/components/debugger/Makefile ])
AC_CONFIG_FILES([ quanta/components/debugger/dbgp/Makefile ])
AC_CONFIG_FILES([ quanta/components/debugger/gubed/Makefile ])
AC_CONFIG_FILES([ quanta/components/debugger/interfaces/Makefile ])
AC_CONFIG_FILES([ quanta/components/framewizard/Makefile ])
AC_CONFIG_FILES([ quanta/components/tableeditor/Makefile ])
AC_CONFIG_FILES([ quanta/data/Makefile ])
AC_CONFIG_FILES([ quanta/data/config/Makefile ])
AC_CONFIG_FILES([ quanta/data/doc/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/cffunct/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/cfml/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/css/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/docbook-4.2/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/dtd/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/empty/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/html/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/html-frameset/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/html-strict/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/kde-docbook-4.1.2/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/kde-docbook-4.2/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/php/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/relaxng/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/schema/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/tagxml/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/wml-1-2/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xhtml/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xhtml-basic/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xhtml-frameset/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xhtml-strict/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xhtml11/Makefile ])
AC_CONFIG_FILES([ quanta/data/dtep/xslt/Makefile ])
AC_CONFIG_FILES([ quanta/data/icons/Makefile ])
AC_CONFIG_FILES([ quanta/data/icons/16x16/Makefile ])
AC_CONFIG_FILES([ quanta/data/icons/22x22/Makefile ])
AC_CONFIG_FILES([ quanta/data/pics/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/images/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/images/jpg/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/images/others/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/images/png/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/binaries/others/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/documents/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/documents/html/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/documents/others/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/documents/scripts/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/banners/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/buttons/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/jpg/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/others/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/images/png/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/docbook/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/html/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/html/html_4.0.1/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/html/special/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/html/xhtml/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/pages/php/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/scripts/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/scripts/javascript/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/scripts/perl/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/scripts/php/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/text/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/text/html/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/text/others/Makefile ])
AC_CONFIG_FILES([ quanta/data/templates/text/scripts/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/cfml/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/css/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/docbook/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/html/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/kde-docbook/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/schema/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/tagxml/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/wml-1-2/Makefile ])
AC_CONFIG_FILES([ quanta/data/toolbars/xml/Makefile ])
AC_CONFIG_FILES([ quanta/dialogs/Makefile ])
AC_CONFIG_FILES([ quanta/dialogs/settings/Makefile ])
AC_CONFIG_FILES([ quanta/dialogs/tagdialogs/Makefile ])
AC_CONFIG_FILES([ quanta/messages/Makefile ])
AC_CONFIG_FILES([ quanta/parsers/Makefile ])
AC_CONFIG_FILES([ quanta/parsers/dtd/Makefile ])
AC_CONFIG_FILES([ quanta/parts/Makefile ])
AC_CONFIG_FILES([ quanta/parts/kafka/Makefile ])
AC_CONFIG_FILES([ quanta/parts/kafka/pics/Makefile ])
AC_CONFIG_FILES([ quanta/parts/preview/Makefile ])
AC_CONFIG_FILES([ quanta/plugins/Makefile ])
AC_CONFIG_FILES([ quanta/project/Makefile ])
AC_CONFIG_FILES([ quanta/scripts/Makefile ])
AC_CONFIG_FILES([ quanta/src/Makefile ])
AC_CONFIG_FILES([ quanta/treeviews/Makefile ])
AC_CONFIG_FILES([ quanta/utility/Makefile ])
AC_OUTPUT
if test "$enable_editors" = "yes"; then
 echo ""
 echo "WARNING: You have enabled the editor chooser feature!"
 echo "This feature is highly experimental, and officially only the"
 echo "Kate part (Advanced Text Editor) is supported!"
 echo "Some features are not accessible with other editors, and"
 echo "Quanta may even crash with those!"
fi
# Check if KDE_SET_PREFIX was called, and --prefix was passed to configure
if test -n "$kde_libs_prefix" -a -n "$given_prefix"; then
  # And if so, warn when they don't match
  if test "$kde_libs_prefix" != "$given_prefix"; then
    # And if kde doesn't know about the prefix yet
    echo ":"`kde-config --path exe`":" | grep ":$given_prefix/bin/:" 2>&1 >/dev/null
    if test $? -ne 0; then
      echo ""
      echo "Warning: you chose to install this package in $given_prefix,"
      echo "but KDE was found in $kde_libs_prefix."
      echo "For this to work, you will need to tell KDE about the new prefix, by ensuring"
      echo "that KDEDIRS contains it, e.g. export KDEDIRS=$given_prefix:$kde_libs_prefix"
      echo "Then restart KDE."
      echo ""
    fi
  fi
fi

if test x$GXX = "xyes" -a x$kde_have_gcc_visibility = "xyes" -a x$kde_cv_val_qt_gcc_visibility_patched = "xno"; then
  echo ""
  echo "Your GCC supports symbol visibility, but the patch for Qt supporting visibility"
  echo "was not included. Therefore, GCC symbol visibility support remains disabled."
  echo ""
  echo "For better performance, consider including the Qt visibility supporting patch"
  echo "located at:"
  echo ""
  echo "http://bugs.kde.org/show_bug.cgi?id=109386"
  echo ""
  echo "and recompile all of Qt and KDE. Note, this is entirely optional and"
  echo "everything will continue to work just fine without it."
  echo ""
fi

if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
